# NewHTTPS 生产环境 Nginx 配置
# 适配服务器: 8.134.166.234
# 网络限制: 仅开放80/443端口，无域名环境

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式 - 包含真实IP
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # 基本设置
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    server_tokens off;  # 隐藏Nginx版本

    # 真实IP配置（适配云服务器）
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Gzip 压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 上游服务器配置
    upstream newhttps-api {
        server newhttps-api:3000;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    upstream newhttps-web {
        server newhttps-web:80;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # 限流配置
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=web:10m rate=20r/s;

    # HTTP 服务器配置 (端口80)
    server {
        listen 80;
        server_name 8.134.166.234 _;
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header X-Real-IP $remote_addr always;
        
        # 禁用不必要的HTTP方法
        if ($request_method !~ ^(GET|HEAD|POST|PUT|DELETE|OPTIONS)$ ) {
            return 405;
        }

        # API 代理 - 限流保护
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://newhttps-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # WebSocket 支持
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 缓冲设置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Agent API 专用路径 - 更宽松的限流
        location /api/agent/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://newhttps-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Agent专用超时设置（更长）
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 300s;  # Agent操作可能较慢
        }
        
        # 健康检查 - 无限流
        location /health {
            proxy_pass http://newhttps-api/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # API文档
        location /api/docs {
            proxy_pass http://newhttps-api/api/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Web 界面 - 限流保护
        location / {
            limit_req zone=web burst=50 nodelay;
            
            proxy_pass http://newhttps-web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 静态资源缓存
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://newhttps-web;
                proxy_set_header Host $host;
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }
        
        # 拒绝访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 状态页面（可选）
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.20.0.0/16;  # Docker网络
            deny all;
        }
    }

    # HTTPS 服务器配置 (端口443) - 自签名证书
    server {
        listen 443 ssl http2;
        server_name 8.134.166.234 _;
        
        # 自签名SSL证书配置
        ssl_certificate /etc/nginx/ssl-custom/server.crt;
        ssl_certificate_key /etc/nginx/ssl-custom/server.key;
        
        # SSL 安全配置
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        
        # HSTS (可选，谨慎使用)
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # 安全头
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # 包含与HTTP相同的location配置
        include /etc/nginx/conf.d/locations.conf;
        
        # 如果没有单独的locations文件，复制HTTP server中的所有location块
        # API 代理
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://newhttps-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;  # 注意这里是https
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Agent API
        location /api/agent/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://newhttps-api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 300s;
        }
        
        # 健康检查
        location /health {
            proxy_pass http://newhttps-api/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Web 界面
        location / {
            limit_req zone=web burst=50 nodelay;
            
            proxy_pass http://newhttps-web;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
        }
    }
}

# 配置说明:
# 1. 适配服务器IP: 8.134.166.234
# 2. 仅开放80/443端口，内部服务通过Docker网络通信
# 3. 支持HTTP和HTTPS（自签名证书）
# 4. Agent通过 /api/agent/ 路径访问，有专门的超时配置
# 5. 包含限流、安全头、日志等生产环境配置
